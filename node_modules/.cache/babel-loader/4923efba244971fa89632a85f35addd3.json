{"ast":null,"code":"import _asyncToGenerator from\"/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";var url=\"https://api.onec.in/api/v1/naas\";var contract_address=process.env.REACT_APP_NAAS_CONTRACT_ADDRESS;//your contract address\nvar contract_type=\"721\";//your contract type\nvar getApikeyurl=\"http://localhost:6969/uploadimage\";var apiKey=\"ff189e70-b00a-4f33-9f29-81f48931f6a4\";export var uploadImageToIpfs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// try {\n//   // let apiKey = await axios.get(getApikeyurl);\n//   // apiKey = apiKey.data;\n//   // console.log(\"apiKey\", apiKey);\n//   const res = await axios.post(`${url}/ipfsFile/`, file, {\n//     headers: {\n//       \"NAAS-APIKEY\": apiKey,\n//     },\n//   });\n//   return res.data;\n// } catch (e) {\n//   console.log(e);\n// }\nconsole.log(\"file\",file);_context.next=3;return axios.post(getApikeyurl,file);case 3:res=_context.sent;case 4:case\"end\":return _context.stop();}}},_callee);}));return function uploadImageToIpfs(_x){return _ref.apply(this,arguments);};}();export var NftMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(nftmetadata,address){var data,_apiKey,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:data={metadata_list:[{public_address:address,metadata:nftmetadata}],contract_address:contract_address,contract_type:contract_type};console.log(data);if(!(data.metadata_list[0].public_address==undefined)){_context2.next=6;break;}return _context2.abrupt(\"return\",\"Ethereum Address is required\");case 6:_context2.prev=6;_context2.next=9;return axios.get(getApikeyurl);case 9:_apiKey=_context2.sent;_apiKey=_apiKey.data;_context2.next=13;return axios.post(\"\".concat(url,\"/mintNFT/\"),data,{headers:{\"Content-Type\":\"application/json\",\"NAAS-APIKEY\":_apiKey}});case 13:res=_context2.sent;return _context2.abrupt(\"return\",res.data);case 17:_context2.prev=17;_context2.t0=_context2[\"catch\"](6);console.log(\"error\",_context2.t0);case 20:case\"end\":return _context2.stop();}}},_callee2,null,[[6,17]]);}));return function NftMint(_x2,_x3){return _ref2.apply(this,arguments);};}();export var NftStatus=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(nft_id){var _apiKey2,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(!(nft_id==undefined)){_context3.next=5;break;}return _context3.abrupt(\"return\",\"NFT ID is required\");case 5:_context3.next=7;return axios.get(getApikeyurl);case 7:_apiKey2=_context3.sent;_apiKey2=_apiKey2.data;_context3.next=11;return axios.get(\"\".concat(url,\"/checkMintStatus/\").concat(nft_id),{headers:{\"Content-Type\":\"application/json\",\"NAAS-APIKEY\":_apiKey2}});case 11:res=_context3.sent;return _context3.abrupt(\"return\",res.data);case 13:_context3.next=18;break;case 15:_context3.prev=15;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 18:case\"end\":return _context3.stop();}}},_callee3,null,[[0,15]]);}));return function NftStatus(_x4){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/action/nft.js"],"names":["axios","url","contract_address","process","env","REACT_APP_NAAS_CONTRACT_ADDRESS","contract_type","getApikeyurl","apiKey","uploadImageToIpfs","file","console","log","post","res","NftMint","nftmetadata","address","data","metadata_list","public_address","metadata","undefined","get","headers","NftStatus","nft_id"],"mappings":"uRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,GAAG,CAAG,iCAAZ,CAEA,GAAMC,CAAAA,gBAAgB,CAAGC,OAAO,CAACC,GAAR,CAAYC,+BAArC,CAAsE;AACtE,GAAMC,CAAAA,aAAa,CAAG,KAAtB,CAA6B;AAE7B,GAAMC,CAAAA,YAAY,CAAG,mCAArB,CACA,GAAMC,CAAAA,MAAM,CAAG,sCAAf,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,0FAAG,iBAAOC,IAAP,0HAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBF,IAApB,EAd+B,sBAebV,CAAAA,KAAK,CAACa,IAAN,CAAWN,YAAX,CAAyBG,IAAzB,CAfa,QAezBI,GAfyB,qEAAH,kBAAjBL,CAAAA,iBAAiB,4CAAvB,CAmBP,MAAO,IAAMM,CAAAA,OAAO,2FAAG,kBAAOC,WAAP,CAAoBC,OAApB,2IACjBC,IADiB,CACV,CACTC,aAAa,CAAE,CACb,CACEC,cAAc,CAAEH,OADlB,CAEEI,QAAQ,CAAEL,WAFZ,CADa,CADN,CAOTd,gBAAgB,CAAEA,gBAPT,CAQTI,aAAa,CAAEA,aARN,CADU,CAWrBK,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAXqB,KAajBA,IAAI,CAACC,aAAL,CAAmB,CAAnB,EAAsBC,cAAtB,EAAwCE,SAbvB,4DAcZ,8BAdY,iDAiBEtB,CAAAA,KAAK,CAACuB,GAAN,CAAUhB,YAAV,CAjBF,QAiBbC,OAjBa,gBAkBjBA,OAAM,CAAGA,OAAM,CAACU,IAAhB,CAlBiB,wBAmBClB,CAAAA,KAAK,CAACa,IAAN,WAAcZ,GAAd,cAA8BiB,IAA9B,CAAoC,CACpDM,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,cAAehB,OAFR,CAD2C,CAApC,CAnBD,SAmBXM,GAnBW,iDAyBVA,GAAG,CAACI,IAzBM,+DA2BjBP,OAAO,CAACC,GAAR,CAAY,OAAZ,eA3BiB,uEAAH,kBAAPG,CAAAA,OAAO,kDAAb,CAgCP,MAAO,IAAMU,CAAAA,SAAS,2FAAG,kBAAOC,MAAP,6JAEjBA,MAAM,EAAIJ,SAFO,4DAGZ,oBAHY,gCAKAtB,CAAAA,KAAK,CAACuB,GAAN,CAAUhB,YAAV,CALA,QAKfC,QALe,gBAMnBA,QAAM,CAAGA,QAAM,CAACU,IAAhB,CANmB,wBAODlB,CAAAA,KAAK,CAACuB,GAAN,WAAatB,GAAb,6BAAoCyB,MAApC,EAA8C,CAC9DF,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,cAAehB,QAFR,CADqD,CAA9C,CAPC,SAObM,GAPa,iDAcZA,GAAG,CAACI,IAdQ,+FAiBrBP,OAAO,CAACC,GAAR,eAjBqB,uEAAH,kBAATa,CAAAA,SAAS,8CAAf","sourcesContent":["import axios from \"axios\";\nconst url = \"https://api.onec.in/api/v1/naas\";\n\nconst contract_address = process.env.REACT_APP_NAAS_CONTRACT_ADDRESS; //your contract address\nconst contract_type = \"721\"; //your contract type\n\nconst getApikeyurl = \"http://localhost:6969/uploadimage\";\nconst apiKey = \"ff189e70-b00a-4f33-9f29-81f48931f6a4\";\n\nexport const uploadImageToIpfs = async (file) => {\n  // try {\n  //   // let apiKey = await axios.get(getApikeyurl);\n  //   // apiKey = apiKey.data;\n  //   // console.log(\"apiKey\", apiKey);\n  //   const res = await axios.post(`${url}/ipfsFile/`, file, {\n  //     headers: {\n  //       \"NAAS-APIKEY\": apiKey,\n  //     },\n  //   });\n  //   return res.data;\n  // } catch (e) {\n  //   console.log(e);\n  // }\n  console.log(\"file\", file);\n  const res = await axios.post(getApikeyurl, file);\n  // console.log(\"res\", res);\n};\n\nexport const NftMint = async (nftmetadata, address) => {\n  var data = {\n    metadata_list: [\n      {\n        public_address: address,\n        metadata: nftmetadata,\n      },\n    ],\n    contract_address: contract_address,\n    contract_type: contract_type,\n  };\n  console.log(data);\n\n  if (data.metadata_list[0].public_address == undefined) {\n    return \"Ethereum Address is required\";\n  } else {\n    try {\n      let apiKey = await axios.get(getApikeyurl);\n      apiKey = apiKey.data;\n      const res = await axios.post(`${url}/mintNFT/`, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"NAAS-APIKEY\": apiKey,\n        },\n      });\n      return res.data;\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n};\n\nexport const NftStatus = async (nft_id) => {\n  try {\n    if (nft_id == undefined) {\n      return \"NFT ID is required\";\n    } else {\n      let apiKey = await axios.get(getApikeyurl);\n      apiKey = apiKey.data;\n      const res = await axios.get(`${url}/checkMintStatus/${nft_id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"NAAS-APIKEY\": apiKey,\n        },\n      });\n\n      return res.data;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}