[{"/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/index.js":"1","/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/App.js":"2","/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/component/Form.js":"3","/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/component/Navbar.js":"4","/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/action/nft.js":"5"},{"size":363,"mtime":1658588730312,"results":"6","hashOfConfig":"7"},{"size":1445,"mtime":1658588730309,"results":"8","hashOfConfig":"7"},{"size":7161,"mtime":1658588730311,"results":"9","hashOfConfig":"7"},{"size":5149,"mtime":1658588730312,"results":"10","hashOfConfig":"7"},{"size":2084,"mtime":1658588730309,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cfhe72",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/index.js",[],[],"/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/App.js",["31"],[],"import \"./App.css\";\nimport Navbar from \"./component/Navbar\";\nimport Form from \"./component/Form\";\nimport \"@fontsource/plus-jakarta-sans\";\nimport \"@fontsource/plus-jakarta-sans/800.css\";\nimport \"@fontsource/plus-jakarta-sans/600.css\";\n\nimport abstract from \"./assets/abstract.png\";\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <Navbar />\n\n      <div className=\"w-full mt-28 relative\">\n        <div className=\"max-w-xl lg:max-w-screen-xl lg:px-28 px-4 mx-auto \">\n          <div className=\"dark-text pb-12 \">\n            <p className=\"text-3xl md:text-5xl font-bold\">NFT minter</p>\n            <p className=\"text-lg md:text-xl pt-2 font-semibold\">\n              Free NFT minter on Polygon\n            </p>\n          </div>\n          <img\n            src={abstract}\n            alt=\"abstract\"\n            className=\"absolute sm:flex hidden right-0 sm:-top-8 md:-top-20 lg:-top-32 sm:mr-8 md:mr-20 w-2/5\"\n          />\n        </div>\n      </div>\n      <div className=\"absolute w-full p-2\">\n        <Form />\n        <div className=\"my-12\">\n          <p className=\"text-center dark-text md:text-xl text-base font-bold\">\n            Built with Onecdot Dev Tools{\" \"}\n            <a\n              href=\"https://dashboard.onec.in/\"\n              target=\"_blank\"\n              className=\"underline\"\n            >\n              Build Yours\n            </a>{\" \"}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/component/Form.js",["32","33","34","35","36","37"],[],"import React, { useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport { uploadImageToIpfs, NftMint, NftStatus } from \"../action/nft\";\nconst Form = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    external_url: \"\",\n  });\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [txn_id, setTxnId] = useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let address = localStorage.getItem(\"onec-address\");\n    if (!address) {\n      enqueueSnackbar(\"Please connect your wallet\", {\n        variant: \"error\",\n        autoHideDuration: 2000,\n      });\n      return;\n    }\n\n    // check image size if less than 3mb\n    if (image.size > 3000000) {\n      enqueueSnackbar(\"Image size should be less than 3mb\", {\n        variant: \"error\",\n        autoHideDuration: 2000,\n      });\n      return;\n    }\n\n    // setLoading(true);\n    const fdata = new FormData();\n    // console.log(\"image\", image);\n    fdata.append(\"FILE\", image);\n    const ipfsHash = await uploadImageToIpfs(fdata);\n    console.log(\"ipfsHash\", ipfsHash);\n    // enqueueSnackbar(\"Image uploaded to IPFS\", {\n    //   variant: \"success\",\n    //   autoHideDuration: 2000,\n    // });\n    // const res = await NftMint(\n    //   {\n    //     name: formData.name,\n    //     description: formData.description,\n    //     image: ipfsHash.file_hashes[0].Hash,\n    //     external_url: formData.external_url,\n    //   },\n    //   address\n    // );\n    // enqueueSnackbar(\"Metadata uploaded to ipfs\", {\n    //   variant: \"success\",\n    //   autoHideDuration: 2000,\n    // });\n    // const myinterval = setInterval(async () => {\n    //   const stat = await NftStatus(res.nft_ids[0]);\n    //   if (stat.display == \"Creation success\") {\n    //     setLoading(false);\n    //     clearInterval(myinterval);\n    //     setTxnId(stat.txn_id);\n    //     enqueueSnackbar(\"NFT Minted Successfully!!\", {\n    //       variant: \"success\",\n    //       autoHideDuration: 3000,\n    //     });\n    //     setFormData({\n    //       name: \"\",\n    //       description: \"\",\n    //       external_url: \"\",\n    //     });\n    //     setImage(\"\");\n    //   }\n    // }, 2000);\n  };\n\n  return (\n    <div className=\"max-w-xl lg:max-w-screen-xl mx-auto lg:px-32\">\n      <div className=\"shadow-2xl rounded-2xl  bg-white \">\n        <p className=\"text-2xl font-semibold px-6 pt-4 pb-4 border-b\">\n          Mint your NFTs on{\" \"}\n          <span className=\"purple-text font-bold\">Polygon</span>\n        </p>\n        <form onSubmit={handleSubmit} className=\"p-5 py-16\">\n          <div className=\"flex flex-wrap\">\n            <div className=\"md:w-2/5 w-full\">\n              <div className=\"mb-1 z-20 relative overflow-hidden \">\n                <div className=\" rounded-lg mx-4 flex flex-col justify-center items-center h-60 border-dashed border-2 border-black\">\n                  {image ? (\n                    <img\n                      src={URL.createObjectURL(image)}\n                      alt=\"image\"\n                      style={{ height: \"inherit\", width: \"inherit\" }}\n                      className=\"p-2\"\n                    />\n                  ) : (\n                    <>\n                      {/* <span className=\"text-2xl\">+</span> */}\n                      <span>Browse Files</span>\n                      <span className=\"text-xs text-gray-400\">\n                        Supports JPG, PNG and MP4 videos. Max file size : 3MB.\n                      </span>\n                    </>\n                  )}\n                </div>\n                <input\n                  type=\"file\"\n                  required\n                  accept=\"image/*\"\n                  name=\"image\"\n                  className=\"absolute inset-0 opacity-0 text-transparent bg-transparent border-0\"\n                  multiple={false}\n                  onChange={(e) => setImage(e.target.files[0])}\n                />{\" \"}\n                <br />\n              </div>\n            </div>\n            <div className=\"md:w-3/5 w-full\">\n              <div className=\"mb-6\">\n                <label className=\"dark-text text-lg pb-2 font-semibold\">\n                  Title <span className=\"text-red-700\">*</span>\n                </label>\n                <br />\n                <input\n                  type=\"text\"\n                  required\n                  value={formData.name}\n                  onChange={(e) =>\n                    setFormData({ ...formData, name: e.target.value })\n                  }\n                  placeholder=\"Project Title\"\n                  className=\"border text-gray-600  px-2 w-full py-2  focus:outline-none rounded-lg transition duration-500 ease-in-out focus:ring-1 ring-black\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"text-lg dark-text pb-2 font-semibold\">\n                  Description <span className=\"text-red-700\">*</span>\n                </label>\n                <br />\n                <textarea\n                  type=\"text\"\n                  rows=\"3\"\n                  required\n                  value={formData.description}\n                  onChange={(e) =>\n                    setFormData({ ...formData, description: e.target.value })\n                  }\n                  placeholder=\"Short Description(max 300 characters)\"\n                  maxLength=\"300\"\n                  className=\"border text-gray-600 mb-2 px-2 w-full py-1 focus:outline-none rounded-lg transition duration-500 ease-in-out focus:ring-1 ring-black\"\n                />\n              </div>\n\n              <div className=\"mb-6\">\n                <label className=\"text-lg dark-text pb-2 font-semibold\">\n                  Social URL (optional)\n                </label>\n                <br />\n                <input\n                  type=\"text\"\n                  value={formData.external_url}\n                  onChange={(e) =>\n                    setFormData({ ...formData, external_url: e.target.value })\n                  }\n                  placeholder=\"Project URL\"\n                  className=\"border text-gray-600  px-2 w-full py-2 focus:outline-none rounded-lg transition duration-500 ease-in-out focus:ring-1 ring-black\"\n                />\n              </div>\n\n              <div className=\"mt-3\">\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className=\"dark-bg light-text font-semibold text-lg py-2 w-40 rounded-2xl focus:outline-none focus:shadow-outline\"\n                >\n                  {loading ? \"minting...\" : \"Mint your NFT\"}\n                </button>\n                {txn_id && (\n                  <a\n                    href={`https://mumbai.polygonscan.com/tx/${txn_id}`}\n                    target=\"_blank\"\n                    className=\"text-sm underline block mt-4 dark-text\"\n                  >\n                    Click here to check Transaction\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/component/Navbar.js",["38","39"],[],"import React, { useState } from \"react\";\nimport Onec from \"onec-sdk\";\nimport logo from \"../assets/Group 512643.svg\";\nconst Navbar = () => {\n  const url = \"https://avatars.dicebear.com/api/identicon/2.svg\";\n\n  const [address, setAddress] = useState(localStorage.getItem(\"onec-address\"));\n  const [showDropDown, setShowDropDown] = useState(false);\n\n  const WalletAuthenticate = async () => {\n    const res = await Onec.auth.withMetamask();\n    setAddress(res.user.address);\n    localStorage.setItem(\"onec-address\", res.user.address);\n  };\n\n  const Logout = async () => {\n    setAddress(\"\");\n    setShowDropDown(false);\n    localStorage.removeItem(\"onec-address\");\n  };\n\n  return (\n    <div className=\"h-20 max-w-xl lg:max-w-screen-xl lg:px-28 px-8 mx-auto z-20\">\n      <div className=\"flex justify-between items-center py-3 flex-wrap\">\n        <img src={logo} alt=\"logo\" className=\"md:h-10 h-8 mt-2\" />\n        {address ? (\n          <div>\n            <button\n              onClick={() => setShowDropDown(!showDropDown)}\n              className=\"bg-gray-200 w-48 mt-2 py-2 px-3 rounded-3xl dark-bg light-text font-semibold flex items-center\"\n            >\n              <img src={url} className=\"w-6 h-6 rounded-full\" />{\" \"}\n              <p className=\"pl-2 text-sm truncate\">{address}</p>\n            </button>\n            {showDropDown && (\n              <div className=\"absolute bg-white rounded-3xl mt-1 shadow-lg z-10 w-48\">\n                <div className=\"flex flex-col py-2\">\n                  <button onClick={Logout} className=\"dark-text font-semibold\">\n                    logout\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <button\n            onClick={() => WalletAuthenticate()}\n            className=\"bg-gray-200 w-48 mt-2 py-2 px-3 rounded-3xl dark-bg light-text font-semibold flex items-center\"\n          >\n            <img src={url} className=\"w-6 h-6 rounded-full\" />{\" \"}\n            <span className=\"text-sm pl-2\">Connect your wallet</span>\n          </button>\n        )}\n      </div>\n      {/* {showModal ? (\n        <>\n          <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\n                  <h3 className=\"text-3xl font-semibold\"></h3>\n                  <button\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                    onClick={() => setShowModal(false)}\n                  >\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                      ×\n                    </span>\n                  </button>\n                </div>\n                <div className=\"relative p-6 flex-auto\">\n                  <div className=\"flex w-full \">\n                    <div className=\"w-1/2 flex flex-col items-center p-2\">\n                      <img src={metamask} className=\"h-40\" />\n                      <p className=\"font-bold dark-text\">MetaMask</p>\n                      <p className=\"dark-text text-sm\">\n                        Connect your metamask wallet\n                      </p>\n                    </div>\n                    <div className=\"w-1/2 flex flex-col items-center  p-2\">\n                      <img src={walletconnectimage} className=\"h-40 \" />\n                      <p className=\"font-bold dark-text\">Walletconnect</p>\n                      <p>Connect your metamask wallet</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\n                  <button\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                    type=\"button\"\n                    onClick={() => setShowModal(false)}\n                  >\n                    Close\n                  </button>\n                  <button\n                    className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                    type=\"button\"\n                    onClick={() => setShowModal(false)}\n                  >\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n        </>\n      ) : null} */}\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/beckybutton/Documents/GitHub/ethcc1/nftminter/src/action/nft.js",["40","41","42","43"],[],"import axios from \"axios\";\nconst url = \"https://api.onec.in/api/v1/naas\";\n\nconst contract_address = process.env.REACT_APP_NAAS_CONTRACT_ADDRESS; //your contract address\nconst contract_type = \"721\"; //your contract type\n\nconst getApikeyurl = \"http://localhost:6969/uploadimage\";\nconst apiKey = \"ff189e70-b00a-4f33-9f29-81f48931f6a4\";\n\nexport const uploadImageToIpfs = async (file) => {\n  // try {\n  //   // let apiKey = await axios.get(getApikeyurl);\n  //   // apiKey = apiKey.data;\n  //   // console.log(\"apiKey\", apiKey);\n  //   const res = await axios.post(`${url}/ipfsFile/`, file, {\n  //     headers: {\n  //       \"NAAS-APIKEY\": apiKey,\n  //     },\n  //   });\n  //   return res.data;\n  // } catch (e) {\n  //   console.log(e);\n  // }\n  console.log(\"file\", file);\n  const res = await axios.post(getApikeyurl, file);\n  // console.log(\"res\", res);\n};\n\nexport const NftMint = async (nftmetadata, address) => {\n  var data = {\n    metadata_list: [\n      {\n        public_address: address,\n        metadata: nftmetadata,\n      },\n    ],\n    contract_address: contract_address,\n    contract_type: contract_type,\n  };\n  console.log(data);\n\n  if (data.metadata_list[0].public_address == undefined) {\n    return \"Ethereum Address is required\";\n  } else {\n    try {\n      let apiKey = await axios.get(getApikeyurl);\n      apiKey = apiKey.data;\n      const res = await axios.post(`${url}/mintNFT/`, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"NAAS-APIKEY\": apiKey,\n        },\n      });\n      return res.data;\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n};\n\nexport const NftStatus = async (nft_id) => {\n  try {\n    if (nft_id == undefined) {\n      return \"NFT ID is required\";\n    } else {\n      let apiKey = await axios.get(getApikeyurl);\n      apiKey = apiKey.data;\n      const res = await axios.get(`${url}/checkMintStatus/${nft_id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"NAAS-APIKEY\": apiKey,\n        },\n      });\n\n      return res.data;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n",{"ruleId":"44","severity":1,"message":"45","line":35,"column":13,"nodeType":"46","messageId":"47","endLine":39,"endColumn":14,"fix":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":29,"nodeType":"51","messageId":"52","endLine":3,"endColumn":36},{"ruleId":"49","severity":1,"message":"53","line":3,"column":38,"nodeType":"51","messageId":"52","endLine":3,"endColumn":47},{"ruleId":"49","severity":1,"message":"54","line":11,"column":19,"nodeType":"51","messageId":"52","endLine":11,"endColumn":29},{"ruleId":"49","severity":1,"message":"55","line":12,"column":18,"nodeType":"51","messageId":"52","endLine":12,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":91,"column":21,"nodeType":"46","endLine":96,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":180,"column":19,"nodeType":"46","messageId":"47","endLine":184,"endColumn":20,"fix":"58"},{"ruleId":"59","severity":1,"message":"60","line":32,"column":15,"nodeType":"46","endLine":32,"endColumn":65},{"ruleId":"59","severity":1,"message":"60","line":50,"column":13,"nodeType":"46","endLine":50,"endColumn":63},{"ruleId":"49","severity":1,"message":"61","line":8,"column":7,"nodeType":"51","messageId":"52","endLine":8,"endColumn":13},{"ruleId":"49","severity":1,"message":"62","line":25,"column":9,"nodeType":"51","messageId":"52","endLine":25,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":42,"column":44,"nodeType":"65","messageId":"66","endLine":42,"endColumn":46},{"ruleId":"63","severity":1,"message":"64","line":63,"column":16,"nodeType":"65","messageId":"66","endLine":63,"endColumn":18},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"67","text":"68"},"no-unused-vars","'NftMint' is defined but never used.","Identifier","unusedVar","'NftStatus' is defined but never used.","'setLoading' is assigned a value but never used.","'setTxnId' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"69","text":"68"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'apiKey' is assigned a value but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",[1300,1300]," rel=\"noreferrer\"",[6919,6919]]